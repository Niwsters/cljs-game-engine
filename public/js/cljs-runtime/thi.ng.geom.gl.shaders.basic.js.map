{"version":3,"sources":["thi/ng/geom/gl/shaders/basic.cljc"],"mappings":";AAIA,AAAA,gDAAA,wDAAAA,xGAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,4EAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,8EAAA,9EAAMD;AAAN,AAEG,mFAAA,5EAACM;;;AAFJ,CAAA,8EAAA,WAAAJ,zFAAMF;AAAN,AAAA,IAAAG,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;kBAAA,AAAAE,4CAAAF,eAAA,zEAGKI;kBAHL,AAAAF,4CAAAF,eAAA,kDAAA,3HAG0BK;AAH1B,AAIG,WAAA,2CAAA,4PAAA,6IAAA,6DAAA,2CAAA,qDAAA,qDAAA,sDAAA,mFAAA,oFAAA,qDAAA,mFAAA,4FAAA,2DAAA,2CAAA,prCAAMC,oGAAgB,CAAA,kEAAA,wHAAA,3KACK,+BAAA,cAAA,3BAAIF,qDAEJ,+BAAA,gCAAA,7CAAIC,mJASN,CAAA,2EAAA,/CACK,+BAAA,OAAA,pBAAID,4bAGGG,4NACAA,2MACJ,+BAAA,qDAAA,lEAAIF;IAC/BC,WAAK,kBAAIF,8EACEE,nBACA,wBAAA,mFAAA,2DAAA,+DAAA,rOAACE,9CACD,wUAAA,0DAAA,2CAAA,sDAAA,neAACC,giBACL,wBAAA,mFAAA,6DAAA,+DAAA,vOAACD,mBAASF;AAvBvB,AAwBEA;;;AA5BL,CAAA,wEAAA,xEAAMT;;AAAN,AA8BA,mDAAA,nDAAMa,8GACHC;AADH,AACkB,mFAAA,2CAAA,2FAAA,kDAAA,pQAACR,8LAAiCQ;;AAEpD,mDAAA,nDAAMC,8GACHD;AADH,AACkB,mFAAA,2CAAA,2FAAA,kDAAA,pQAACR,8LAAiCQ","names":["var_args","G__16012","thi.ng.geom.gl.shaders.basic/make-shader-spec","js/Error","p__16013","map__16015","cljs.core/--destructure-map","cljs.core.get","thi.ng.geom.gl.shaders.basic.make_shader_spec","attr?","is3d?","spec","thi.ng.geom.matrix/M44","cljs.core/assoc-in","cljs.core.assoc","thi.ng.geom.gl.shaders.basic/make-shader-spec-2d","color-attrib?","thi.ng.geom.gl.shaders.basic/make-shader-spec-3d"],"sourcesContent":["(ns thi.ng.geom.gl.shaders.basic\n  (:require\n   [thi.ng.geom.matrix :refer [M44]]))\n\n(defn make-shader-spec\n  ([]\n   (make-shader-spec nil))\n  ([{attr? :color-attrib? is3d? :3d :or {is3d? true}}]\n   (let [spec {:vs       (str \"void main(){\"\n                              (if attr? \"vCol=color;\")\n                              \"gl_Position=proj*\"\n                              (if is3d?\n                                \"view*model*vec4(position,1.0)\"\n                                \"view*model*vec4(position,0.0,1.0)\")\n                              \";}\")\n               :fs       #?(:clj\n                            (str \"out vec4 fragColor;void main(){fragColor=\"\n                                 (if attr? \"vCol\" \"color\")\n                                 \";}\")\n                            :cljs\n                            (str \"void main(){gl_FragColor=\"\n                                 (if attr? \"vCol\" \"color\")\n                                 \";}\"))\n               :uniforms {:proj  :mat4\n                          :model [:mat4 M44]\n                          :view  [:mat4 M44]}\n               :attribs  {:position (if is3d? :vec3 :vec2)}}\n         spec (if attr?\n                (-> spec\n                    (assoc-in [:attribs :color] :vec4)\n                    (assoc :varying {:vCol :vec4}))\n                (assoc-in spec [:uniforms :color] :vec4))]\n     spec)))\n\n(defn make-shader-spec-2d\n  [color-attrib?] (make-shader-spec {:color-attrib? color-attrib? :3d false}))\n\n(defn make-shader-spec-3d\n  [color-attrib?] (make-shader-spec {:color-attrib? color-attrib? :3d true}))\n"]}