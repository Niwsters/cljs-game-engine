{"version":3,"sources":["thi/ng/geom/utils.cljc"],"mappings":"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","names":["thi.ng.geom.utils/closest-point-coeff","p","a","b","d","thi.ng.math.core/-","thi.ng.math.core/dot","thi.ng.math.core/mag-squared","thi.ng.geom.utils/closest-point-on-line","thi.ng.math.core/mix","thi.ng.geom.utils/closest-point-on-segment","t","thi.ng.geom.utils/closest-point-on-segments","segments","cljs.core.transduce","p1__14456#","cljs.core.map","cljs.core.apply","cljs.core.completing","q","d'","thi.ng.geom.core/dist-squared","thi.ng.math.core/INF+","thi.ng.geom.utils/closest-line-between","a1","b1","a2","b2","p43","cljs.core/not","thi.ng.geom.vector/V3","thi.ng.math.core/*eps*","p21","p13","d1343","d4321","d1321","d4343","d2121","thi.ng.math.core/delta=","n","ua","ub","thi.ng.math.core/madd","thi.ng.geom.utils/dist*","rf","c","points","p1__14457#","Math/sqrt","thi.ng.geom.utils/min-dist","cljs.core/min","thi.ng.geom.utils/max-dist","cljs.core/max","thi.ng.geom.utils/arc-length-index","cljs.core.partition","p1__14459#","thi.ng.geom.core/dist","cljs.core.nth","cljs.core.conj","cljs.core/peek","thi.ng.geom.utils/arc-length","thi.ng.dstruct.core.reduce_pairs","cljs.core/+","thi.ng.geom.utils/centroid","coll","G__14461","cljs.core/count","cljs.core/first","s","f","x","_","thi.ng.geom.core/reduce-vector","cljs.core/rest","var_args","G__14464","thi.ng.geom.utils/center","js/Error","c'","thi.ng.geom.utils.center","p1__14462#","cljs.core.mapv","thi.ng.math.core/+","G__14468","thi.ng.geom.utils/scale-size","thi.ng.geom.utils.scale_size","p1__14466#","thi.ng.geom.utils/bounds*","zero","vec__14470","seq__14471","cljs.core/seq","first__14472","cljs.core/next","xs","thi.ng.geom.utils/bounding-rect-raw","thi.ng.geom.vector/V2","thi.ng.geom.utils/bounding-box-raw","thi.ng.geom.utils/radial-bounds","ctor","r-or-points","cljs.core/coll?","thi.ng.geom.utils/axis-bounds","axis","p1__14474#","cljs.core.reduce","thi.ng.geom.utils/axis-range","cljs.core/-","thi.ng.geom.utils/delta-contains","eps","p1__14475#","cljs.core/some","thi.ng.geom.utils/from-barycentric","weights","thi.ng.math.core/*","thi.ng.geom.utils/point-at-index","t'","ti","thi.ng.geom.utils/point-at*","idx","total","i","ct","i1","pi","G__14479","thi.ng.geom.utils/point-at","thi.ng.geom.utils.point_at","thi.ng.math.core.in_range_QMARK_","cljs.core/last","or__5043__auto__","thi.ng.geom.utils/sample-uniform*","udist","include-last?","delta","samples","acc","vec__14484","thi.ng.geom.utils/sample-uniform","thi.ng.geom.utils/sample-segment-with-res","res","include-b?","ls","iter__5520__auto__","s__14490","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5518__auto__","size__5519__auto__","b__14492","cljs.core/chunk-buffer","i__14491","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__14489","cljs.core/chunk-rest","cljs.core/cons","thi.ng.math.core/norm-range","cljs.core/butlast","p__14494","p__14495","vec__14496","vec__14499","thi.ng.geom.utils/map-bilinear","u","v","p__14503","p__14504","vec__14505","vec__14508","thi.ng.geom.utils/map-trilinear","e","g","h","w","G__14514","thi.ng.geom.utils/tessellate-with-point","thi.ng.geom.utils.tessellate_with_point","cljs.core.concat","p1__14511#","cljs.core/PersistentVector","thi.ng.geom.utils/tessellate-with-first","v0","p__14515","vec__14516","p__14520","vec__14521","thi.ng.geom.utils/tessellate-tri-with-midpoints","ab","bc","ca","thi.ng.geom.utils/tessellate-3","pred__14524","expr__14525","cljs.core/==","vec__14527","thi.ng.geom.utils/tessellate-max4","thi.ng.geom.utils/tessellate-face","tess-fn","p__14530","vec__14531","verts","attribs","cljs.core/reduce-kv","k","cljs.core.assoc","cljs.core.map_indexed","G__14536","thi.ng.geom.utils/ortho-normal","p__14537","vec__14538","thi.ng.math.core/normalize","thi.ng.math.core/cross","p__14542","p__14543","p__14544","vec__14545","vec__14548","vec__14551","thi.ng.geom.utils/norm-sign2","ax","ay","bx","by","cx","cy","thi.ng.geom.utils/norm-sign3","thi.ng.math.core/mag","thi.ng.geom.utils/tri-area2","thi.ng.geom.utils/tri-area3","thi.ng.geom.utils/clockwise2?","thi.ng.geom.utils/clockwise3?","G__14557","thi.ng.geom.utils/triangle-barycentric-coords","p__14559","vec__14560","thi.ng.geom.utils.triangle_barycentric_coords","uu","vv","uv","wu","wv","denom","thi.ng.geom.utils/point-in-triangle2?","thi.ng.geom.utils/point-in-triangle3?","thi.ng.geom.utils.ortho_normal","cl","vec__14566","and__5041__auto__","thi.ng.geom.utils/tessellating-transducer","cljs.core.comp","cljs.core.mapcat","thi.ng.geom.utils/area-xf","p1__14570#","G__14571","thi.ng.math.core/abs*","thi.ng.geom.utils/volume-xf","p1__14572#","G__14574","thi.ng.geom.utils/total-area-3d","faces","xf","G__14577","thi.ng.geom.utils/total-volume","thi.ng.geom.utils/bounding-rect","vec__14578","size","thi.ng.geom.types/Rect2","thi.ng.geom.utils/bounding-box","vec__14582","thi.ng.geom.types/AABB","G__14586","thi.ng.geom.utils/bounding-circle","thi.ng.geom.utils.bounding_circle","vec__14587","r","thi.ng.geom.vector/vec2","thi.ng.geom.types/Circle2","G__14592","thi.ng.geom.utils/bounding-sphere","thi.ng.geom.utils.bounding_sphere","vec__14593","thi.ng.geom.vector/vec3","thi.ng.geom.types/Sphere","thi.ng.geom.utils/coll-bounds","thi.ng.math.core/union","thi.ng.geom.core/bounds","thi.ng.geom.utils/fit-all-into-bounds","bounds","thi.ng.math.core/div","cljs.core.get","b'","thi.ng.geom.core/center","thi.ng.geom.core/scale","thi.ng.geom.core/centroid","p1__14597#","thi.ng.geom.core/unmap-point","thi.ng.geom.core/map-point","thi.ng.geom.core/scale-size","thi.ng.geom.utils/into-mesh","mesh","add-face","mesh-or-faces","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","thi.ng.geom.core/IFaceAccess","thi.ng.geom.core/faces","thi.ng.geom.utils/map-mesh","thi.ng.geom.core/into","thi.ng.geom.core/clear*","thi.ng.geom.utils/transform-mesh","tx","thi.ng.geom.core/IVectorTransform","thi.ng.geom.core/transform-vector","verts'","thi.ng.geom.core/vertices","cljs.core.assoc_BANG_","cljs.core/transient","cljs.core/PersistentHashMap","cljs.core/persistent!","p__14602","vec__14603","fv","fa","G__14606","G__14607","cljs.core/chunk-first"],"sourcesContent":["(ns thi.ng.geom.utils\n  #?(:cljs\n     (:require-macros\n      [thi.ng.math.macros :as mm]))\n  (:require\n   [thi.ng.geom.core :as g]\n   [thi.ng.geom.vector :as v :refer [vec2 vec3 V2 V3]]\n   #?(:clj [thi.ng.geom.types] :cljs [thi.ng.geom.types :refer [AABB Circle2 Rect2 Sphere]])\n   [thi.ng.dstruct.core :as d]\n   [thi.ng.math.core :as m :refer [*eps*]]\n   #?(:clj [thi.ng.math.macros :as mm]))\n   #?(:clj (:import [thi.ng.geom.types AABB Circle2 Rect2 Sphere])))\n\n(declare tri-area3)\n\n;; Point collection functions\n;; Distance & length\n\n(defn closest-point-coeff\n  [p a b]\n  (let [d (m/- b a)]\n    (/ (m/dot (m/- p a) d) (m/mag-squared d))))\n\n(defn closest-point-on-line\n  [p a b]\n  (m/mix a b (closest-point-coeff p a b)))\n\n(defn closest-point-on-segment\n  [p a b]\n  (let [t (closest-point-coeff p a b)]\n    (if (<= t 0.0) a (if (>= t 1.0) b (m/mix a b t)))))\n\n(defn closest-point-on-segments\n  [p segments]\n  (transduce\n   (map #(apply closest-point-on-segment p %))\n   (completing\n    (fn [a q]\n      (let [d' (g/dist-squared p q)]\n        (if (< d' (a 1)) [q d'] a))))\n   [nil m/INF+]\n   segments))\n\n(defn closest-line-between\n  [a1 b1 a2 b2]\n  (let [p43 (m/- b2 a2)]\n    (if-not (m/delta= V3 p43 *eps*)\n      (let [p21 (m/- b1 a1)]\n        (if-not (m/delta= V3 p21 *eps*)\n          (let [p13   (m/- a1 a2)\n                d1343 (m/dot p13 p43)\n                d4321 (m/dot p43 p21)\n                d1321 (m/dot p13 p21)\n                d4343 (m/dot p43 p43)\n                d2121 (m/dot p21 p21)\n                d     (mm/msub d2121 d4343 d4321 d4321)]\n            (if (m/delta= 0.0 d *eps*)\n              {:type :parallel}\n              (let [n  (mm/msub d1343 d4321 d1321 d4343)\n                    ua (/ n d)\n                    ub (/ (mm/madd d4321 ua d1343) d4343)]\n                {:type :intersect\n                 :a    (m/madd p21 ua a1)\n                 :b    (m/madd p43 ub a2)\n                 :ua   ua\n                 :ub   ub}))))))))\n\n(defn dist*\n  [rf]\n  (fn [c points]\n    (->> points\n         (transduce (map #(g/dist-squared c %)) rf 0)\n         (Math/sqrt))))\n\n(def min-dist (dist* min))\n(def max-dist (dist* max))\n\n(defn arc-length-index\n  [points]\n  (->> points\n       (partition 2 1)\n       (transduce\n        (map #(g/dist (nth % 0) (nth % 1)))\n        (completing (fn [a d] (conj a (+ (peek a) d))))\n        [0])))\n\n(defn arc-length\n  [points]\n  (d/reduce-pairs + g/dist points))\n\n;; Centroid & centering\n\n(defn centroid\n  [coll]\n  (case (count coll)\n    0 nil\n    1 (first coll)\n    2 (m/mix (first coll) (nth coll 1))\n    (let [s (/ 1.0 (count coll))\n          f (fn [x _] (* x s))]\n      (g/reduce-vector (first coll) + f (rest coll)))))\n\n(defn center\n  ([c' coll]\n   (center (centroid coll) c' coll))\n  ([c c' coll]\n   (let [d (m/- c' c)] (mapv #(m/+ % d) coll))))\n\n(defn scale-size\n  ([s coll] (scale-size (centroid coll) s coll))\n  ([c s coll] (mapv #(m/madd (m/- % c) s c) coll)))\n\n;; Bounds\n\n(defn bounds*\n  [zero coll]\n  (let [c (count coll)]\n    (cond\n      (> c 1) (let [[x & xs] coll\n                    p (g/reduce-vector x min xs)\n                    q (g/reduce-vector x max xs)]\n                [p (m/- q p)])\n      (== c 1) [(first coll) zero]\n      :default nil)))\n\n(defn bounding-rect-raw\n  [points]\n  (bounds* V2 points))\n\n(defn bounding-box-raw\n  [points]\n  (bounds* V3 points))\n\n(defn radial-bounds\n  [ctor c r-or-points]\n  [(ctor c)\n   (if (coll? r-or-points)\n     (max-dist c r-or-points)\n     r-or-points)])\n\n(defn axis-bounds\n  [axis coll]\n  (let [xs (mapv #(nth % axis) coll)]\n    [(reduce min xs) (reduce max xs)]))\n\n(defn axis-range\n  [axis coll]\n  (- (apply - (axis-bounds axis coll))))\n\n(defn delta-contains\n  [points p eps]\n  (some #(m/delta= p % eps) points))\n\n;; Sampling\n\n(defn from-barycentric\n  [points weights]\n  (reduce m/+ (map m/* points weights)))\n\n(defn point-at-index\n  \"Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t.\"\n  [points t]\n  (let [n  (dec (count points))\n        t' (* t n)\n        ti (int t')]\n    (if (< ti n)\n      (m/mix (nth points ti) (nth points (inc ti)) (- t' ti))\n      (nth points (if (neg? ti) 0 n)))))\n\n(defn point-at*\n  [points idx total t i]\n  (let [ct (* t total)\n        i (int (loop [i i] (if (>= ct (idx i)) (recur (inc i)) i)))\n        i1 (dec i)\n        pi (idx i1)]\n    [(m/mix (nth points i1) (nth points i)\n            (mm/subdiv ct pi (idx i) pi))\n     i]))\n\n(defn point-at\n  ([t points] (point-at t points nil))\n  ([t points idx]\n   (when (m/in-range? 0.0 1.0 t)\n     (let [n (count points)\n           t (double t)]\n       (cond\n         (== 0 n) nil\n         (== 1 n) (first points)\n         (== 1.0 t) (last points)\n         :default\n         (let [idx (or idx (arc-length-index points))]\n           (first (point-at* points idx (peek idx) t 1))))))))\n\n(defn sample-uniform*\n  [udist include-last? points]\n  (let [idx (arc-length-index points)\n        total (peek idx)\n        delta (/ udist total)\n        samples (loop [t 0.0, i 1, acc []]\n                  (if (< t 1.0)\n                    (let [[p i] (point-at* points idx total t i)]\n                      (recur (+ t delta) (int i) (conj acc p)))\n                    acc))]\n    (if include-last?\n      (conj samples (last points))\n      samples)))\n\n(defn sample-uniform\n  [udist include-last? points]\n  (let [n (count points)]\n    (cond\n      (== 0 n) nil\n      (== 1 n) [(first points)]\n      :default (sample-uniform* udist include-last? points))))\n\n(defn sample-segment-with-res\n  [a b res include-b?]\n  (let [ls (for [t (m/norm-range res)] (m/mix a b t))]\n    (if include-b? ls (butlast ls))))\n\n;; Interpolation\n;;\n;; d +----+ c\n;;   |    |\n;;   |    |\n;; a +----+ b\n\n(defn map-bilinear\n  \"Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD\"\n  [[a b c d] [u v]]\n  (m/mix a b d c u v))\n\n;; e +----+ h\n;;   |\\   :\\\n;;   |f+----+ g\n;;   | |  : |\n;; a +-|--+d|\n;;    \\|   \\|\n;;   b +----+ c\n\n(defn map-trilinear\n  \"Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)\"\n  [[a b c d e f g h] [u v w]]\n  (m/mix (m/mix a d e h u v) (m/mix b c f g u v) w))\n\n;; Tessellation\n\n(defn tessellate-with-point\n  ([points] (tessellate-with-point (centroid points) points))\n  ([c points]\n   (->> [(first points)]\n        (concat points)\n        (partition 2 1)\n        (mapv #(vector c (first %) (nth % 1))))))\n\n(defn tessellate-with-first\n  [points]\n  (if (> (count points) 3)\n    (let [v0 (first points)]\n      (mapv (fn [[a b]] [v0 a b]) (partition 2 1 (rest points))))\n    [points]))\n\n(defn tessellate-tri-with-midpoints\n  [[a b c]]\n  (let [ab (m/mix a b)\n        bc (m/mix b c)\n        ca (m/mix c a)]\n    [[a ab ca] [ab b bc] [bc c ca] [ab bc ca]]))\n\n(defn tessellate-3\n  [points]\n  (condp == (count points)\n    3 [points]\n    4 (let [[a b c d] points] [[a b c] [a c d]])\n    (tessellate-with-point points)))\n\n(defn tessellate-max4\n  [points]\n  (if (<= (count points) 4)\n    [points]\n    (tessellate-with-point points)))\n\n(defn tessellate-face\n  [tess-fn]\n  (fn [[verts attribs]]\n    (let [verts (tess-fn verts)\n          attribs (reduce-kv\n                   (fn [acc k v] (assoc acc k (tess-fn v)))\n                   {} attribs)]\n      (map-indexed\n       (fn [i verts]\n         [verts (reduce-kv (fn [acc k v] (assoc acc k (nth v i))) {} attribs)])\n       verts))))\n\n;; Normals\n\n(defn ortho-normal\n  ([[a b c]] (m/normalize (m/cross (m/- b a) (m/- c a))))\n  ([a b] (m/normalize (m/cross a b)))\n  ([a b c] (m/normalize (m/cross (m/- b a) (m/- c a)))))\n\n;; Triangles\n\n(defn norm-sign2\n  [[ax ay] [bx by] [cx cy]]\n  (- (mm/subm bx ax cy ay) (mm/subm cx ax by ay)))\n\n(defn norm-sign3\n  [a b c] (m/mag (m/cross (m/- b a) (m/- c a))))\n\n(defn tri-area2\n  [a b c] (* 0.5 (norm-sign2 a b c)))\n\n(defn tri-area3\n  [a b c] (* 0.5 (norm-sign3 a b c)))\n\n(defn clockwise2?\n  [a b c] (neg? (norm-sign2 a b c)))\n\n(defn clockwise3?\n  [a b c n] (pos? (m/dot (m/cross (m/- b a) (m/- c a)) n)))\n\n(defn triangle-barycentric-coords\n  ([[a b c] p]\n   (triangle-barycentric-coords a b c p (m/- b a) (m/- c a)))\n  ([a b c p]\n   (triangle-barycentric-coords a b c p (m/- b a) (m/- c a)))\n  ([a b c p u v]\n   (let [w (m/- p a)\n         uu (m/mag-squared u)\n         vv (m/mag-squared v)\n         uv (m/dot u v)\n         wu (m/dot w u)\n         wv (m/dot w v)\n         denom (/ 1.0 (mm/msub uv uv uu vv))\n         s (* denom (mm/msub uv wv vv wu))\n         t (* denom (mm/msub uv wu uu wv))]\n     [(- 1.0 (+ s t)) s t])))\n\n(defn point-in-triangle2?\n  [p a b c]\n  (if (clockwise2? a b c)\n    (and (>= (norm-sign2 a c p) 0.0)\n         (>= (norm-sign2 b a p) 0.0)\n         (>= (norm-sign2 c b p) 0.0))\n    (and (>= (norm-sign2 b c p) 0.0)\n         (>= (norm-sign2 a b p) 0.0)\n         (>= (norm-sign2 c a p) 0.0))))\n\n(defn point-in-triangle3?\n  [p a b c]\n  (let [u (m/- b a)\n        v (m/- c a)\n        n (ortho-normal u v)\n        cl (- (m/dot n p) (m/dot n a))]\n    (if (m/delta= 0.0 cl)\n      (let [[u v w] (triangle-barycentric-coords a b c p u v)]\n        (and (>= u 0.0) (>= w 0.0) (m/in-range? 0.0 1.0 v))))))\n\n;; Area & volume\n;; Volume calculation is using signed volume implementation of Triangle3\n\n(defn- tessellating-transducer\n  [f]\n  (comp\n   (mapcat tessellate-with-first)\n   (map f)))\n\n(def ^:private area-xf\n  (tessellating-transducer #(->> % (apply tri-area3) m/abs*)))\n\n(def ^:private volume-xf\n  (tessellating-transducer #(m/dot (% 0) (m/cross (% 1) (% 2)))))\n\n(defn total-area-3d\n  ([faces] (transduce area-xf + faces))\n  ([xf faces] (transduce (comp xf area-xf) + faces)))\n\n(defn total-volume\n  ([faces] (/ (transduce volume-xf + faces) 6.0))\n  ([xf faces] (/ (transduce (comp xf volume-xf) + faces) 6.0)))\n\n;; Bounds (w/ types)\n\n(defn bounding-rect\n  [points]\n  (let [[p size] (bounding-rect-raw points)]\n    (if p (Rect2. p size))))\n\n(defn bounding-box\n  [points]\n  (let [[p size] (bounding-box-raw points)]\n    (if p (AABB. p size))))\n\n(defn bounding-circle\n  ([points]\n   (bounding-circle (centroid points) points))\n  ([c r-or-points]\n   (let [[c r] (radial-bounds vec2 c r-or-points)]\n     (Circle2. c r))))\n\n(defn bounding-sphere\n  ([points]\n   (bounding-sphere (centroid points) points))\n  ([c r-or-points]\n   (let [[c r] (radial-bounds vec3 c r-or-points)]\n     (Sphere. c r))))\n\n(defn coll-bounds\n  \"Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities.\"\n  [coll]\n  (reduce m/union (mapv g/bounds coll)))\n\n(defn fit-all-into-bounds\n  \"Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls.\"\n  [bounds coll]\n  (let [b (coll-bounds coll)\n        s (reduce min (m/div (get bounds :size) (get b :size)))\n        b' (g/center (g/scale b s) (g/centroid bounds))]\n    (map\n     #(-> %\n          (g/center (g/unmap-point b' (g/map-point b (g/centroid %))))\n          (g/scale-size s))\n     coll)))\n\n;; Meshes\n\n(defn into-mesh\n  \"Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it.\"\n  [mesh add-face mesh-or-faces]\n  (reduce\n   add-face\n   mesh\n   (if (satisfies? g/IFaceAccess mesh-or-faces)\n     (g/faces mesh-or-faces true)\n     mesh-or-faces)))\n\n(defn map-mesh\n  \"Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh.\"\n  [f mesh] (g/into (g/clear* mesh) (mapcat f (g/faces mesh true))))\n\n;; TODO how to use this w/ IndexedMesh? Faces only store vertex IDs\n(defn transform-mesh\n  \"Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh.\"\n  [mesh add-face tx]\n  (let [tx     (if (satisfies? g/IVectorTransform tx)\n                 (fn [v] (g/transform-vector tx v))\n                 tx)\n        verts' (->> (g/vertices mesh)\n                    (reduce\n                     (fn [acc v] (assoc! acc v (tx v)))\n                     (transient (hash-map)))\n                    (persistent!))]\n    (reduce\n     (fn [mesh [fv fa]] (add-face mesh [(mapv verts' fv) fa]))\n     (g/clear* mesh) (g/faces mesh true))))\n"]}