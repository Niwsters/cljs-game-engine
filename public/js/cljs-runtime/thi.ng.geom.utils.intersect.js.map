{"version":3,"sources":["thi/ng/geom/utils/intersect.cljc"],"mappings":"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","names":["thi.ng.geom.utils.intersect/sq","x","var_args","G__14613","thi.ng.geom.utils.intersect/intersect-circle-circle?","js/Error","p__14617","p__14618","map__14619","cljs.core/--destructure-map","cljs.core.get","map__14622","p","r1","q","r2","thi.ng.geom.utils.intersect.intersect_circle_circle_QMARK_","delta","thi.ng.math.core/-","d","thi.ng.math.core/mag","G__14629","thi.ng.math.core/abs*","a","invd","thi.ng.math.core/madd","h","Math/sqrt","perp","thi.ng.math.core/*","thi.ng.geom.core/normal","thi.ng.math.core/+","G__14649","thi.ng.geom.utils.intersect/intersect-rect-rect?","p__14651","p__14652","map__14656","vec__14657","cljs.core.nth","vec__14660","map__14663","vec__14664","vec__14667","p__14675","p__14676","p__14677","p__14678","vec__14679","vec__14682","vec__14685","vec__14688","px","py","w","qx","qy","qw","qh","px1","py1","qx1","qy1","px2","py2","qx2","qy2","G__14694","thi.ng.geom.utils.intersect/intersect-rect-circle?","p__14696","p__14697","map__14698","map__14699","p__14701","p__14702","p__14703","vec__14704","vec__14707","vec__14710","sz","s","r","thi.ng.geom.utils.intersect.intersect_rect_circle_QMARK_","cx","cy","ds","G__14719","thi.ng.geom.utils.intersect/intersect-aabb-aabb?","p__14721","p__14722","map__14723","map__14725","pa","sa","pb","sb","thi.ng.geom.utils.intersect.intersect_aabb_aabb_QMARK_","qa","qb","G__14730","thi.ng.geom.utils.intersect/intersect-aabb-sphere?","p__14732","p__14733","map__14734","map__14735","p__14738","p__14739","p__14740","vec__14742","vec__14745","vec__14748","thi.ng.geom.utils.intersect.intersect_aabb_sphere_QMARK_","pz","qz","cz","p__14752","vec__14754","thi.ng.geom.utils.intersect/intersect-aabb-frustum?","size","planes","vec__14757","cljs.core.reduce","p__14760","vec__14761","vec__14764","res","nx","ny","nz","vx","vy","vz","cljs.core/reduced","G__14769","thi.ng.geom.utils.intersect/intersect-sphere-sphere?","p__14771","p__14772","map__14773","map__14774","p1","p2","thi.ng.geom.utils.intersect.intersect_sphere_sphere_QMARK_","thi.ng.geom.core/dist-squared","G__14778","thi.ng.geom.utils.intersect/intersect-ray-sphere?","p__14779","p__14780","map__14781","map__14782","rp","dir","thi.ng.geom.utils.intersect.intersect_ray_sphere_QMARK_","thi.ng.math.core/mag-squared","v","thi.ng.math.core/dot","b","thi.ng.geom.utils.intersect/intersect-ray-triangle3?","c","u","n","thi.ng.math.core/cross","thi.ng.geom.vector/V3","w0","a'","b'","thi.ng.math.core/delta=","vec__14788","i","thi.ng.geom.utils.triangle_barycentric_coords","and__5041__auto__","thi.ng.math.core.in_range_QMARK_","thi.ng.geom.utils.intersect/triaabb-axis-test","pa1","pb1","pa2","pb2","fa","fb","vec__14792","min","max","rad","p__14803","p__14804","p__14805","p__14806","p__14807","vec__14808","vec__14811","vec__14814","vec__14817","vec__14820","thi.ng.geom.utils.intersect/triaabb-edge-test-e0","ax","ay","az","bx","by","bz","ex","ey","ez","e","sx","sy","vec__14823","fx","fy","fz","thi.ng.math.core/abs","p__14827","p__14828","p__14829","p__14830","p__14831","vec__14832","vec__14835","vec__14838","vec__14841","vec__14844","thi.ng.geom.utils.intersect/triaabb-edge-test-e1","vec__14847","p__14854","p__14855","p__14856","p__14857","p__14858","vec__14859","vec__14862","vec__14865","vec__14868","vec__14871","thi.ng.geom.utils.intersect/triaabb-edge-test-e2","vec__14874","thi.ng.geom.utils.intersect/triaabb-edge-minmax","x__5131__auto__","y__5132__auto__","x__5128__auto__","y__5129__auto__","thi.ng.geom.utils.intersect/intersect-triangle3-aabb?","vec__14877","vec__14880","vec__14883","vec__14886","e0","e1","G__14889","G__14890","G__14891","thi.ng.geom.utils.intersect/intersect-plane-aabb?","p__14892","p__14893","p__14894","p__14895","vec__14896","vec__14899","vec__14902","vec__14905","thi.ng.geom.utils.intersect/intersect-line2-line2?","lp","lq","dx1","dy1","dx2","dy2","dx12","dy12","denom","na","nb","ip","thi.ng.geom.utils/closest-point-on-segment","iq","or__5043__auto__","ua","ub","thi.ng.math.core/mix","thi.ng.geom.utils.intersect/intersect-line2-edges?","rq","edges","cljs.core.transduce","cljs.core.comp","cljs.core.map","p__14909","vec__14910","p1__14908#","cljs.core.filter","cljs.core.completing","closest","isec","thi.ng.math.core/INF+","cljs.core/first","thi.ng.geom.utils.intersect/intersect-ray2-edges?","rd","thi.ng.geom.utils.intersect/intersect-plane-plane?","an","aw","bn","bw","thi.ng.math.core/*eps*","od","det","thi.ng.geom.utils.ortho_normal","thi.ng.geom.utils.intersect/intersect-ray-plane?","dp","dn","du","G__14920","p__14922","p__14923","p__14924","vec__14926","vec__14929","vec__14932","s2","thi.ng.geom.utils.intersect.intersect_plane_aabb_QMARK_","vec__14935","vec__14938","vec__14941","vx1","vx2","vy1","vy2","vz1","vz2","thi.ng.geom.utils.intersect/intersect-plane-sphere?","G__14948","thi.ng.geom.utils.intersect/subdot","thi.ng.math.core/subm","thi.ng.geom.utils.intersect/face-a","f","deltas","aff","cljs.core.mapv","thi.ng.geom.utils.intersect/face-b1?","p1__14949#","cljs.core/every?","thi.ng.geom.utils.intersect/face-b2?","verts","refv","p1__14950#","thi.ng.geom.utils.intersect/edge-a","ma","mb","ea","eb","xa","xb","edge","j","cp","cljs.core.not_EQ_","thi.ng.geom.utils.intersect/get-edge","epoints","id","ep","cljs.core.assoc","thi.ng.geom.utils.intersect/check-faces-a","specs","masks","affine","vec__14973","cljs.core._EQ_","vec__14976","vec__14979","vec__14982","m","p1__14959#","p1__14960#","cljs.core.conj","cljs.core/next","thi.ng.geom.utils.intersect/check-faces-b","vec__14995","vec__14998","vec__15001","p__15007","p__15008","vec__15009","vec__15012","thi.ng.geom.utils.intersect/intersect-tetrahedra?","pc","pd","qc","qd","p1__15005#","cljs.core/bit-or","p1__15006#"],"sourcesContent":["(ns thi.ng.geom.utils.intersect\n  #?(:cljs\n     (:require-macros\n      [thi.ng.math.macros :as mm]))\n  (:require\n   [thi.ng.geom.core :as g]\n   [thi.ng.geom.utils :as gu]\n   [thi.ng.geom.vector :as v :refer [vec2 vec3 V2 V3]]\n   [thi.ng.math.core :as m :refer [*eps*]]\n   #?(:clj [thi.ng.math.macros :as mm])))\n\n(declare intersect-plane-aabb?)\n\n(defn- sq [x] (* x x))\n\n(defn intersect-circle-circle?\n  ([{p :p r1 :r} {q :p r2 :r}]\n   (intersect-circle-circle? p r1 q r2))\n  ([p r1 q r2]\n   (let [delta (m/- q p)\n         d (m/mag delta)]\n     (when (and (<= d (+ r1 r2)) (>= d (m/abs* (- r1 r2))))\n       (let [a (/ (+ (- (* r1 r1) (* r2 r2)) (* d d)) (* 2.0 d))\n             invd (/ 1.0 d)\n             p (m/madd delta (* a invd) p)\n             h (Math/sqrt (- (* r1 r1) (* a a)))\n             perp (m/* (g/normal delta) (* h invd))]\n         [(m/+ p perp) (m/- p perp)])))))\n\n(defn intersect-rect-rect?\n  ([{[px py] :p [w h] :size} {[qx qy] :p [qw qh] :size}]\n   (not (or (> px (+ qx qw)) (> qx (+ px w)) (> py (+ qy qh)) (> qy (+ py h)))))\n  ([[px1 py1] [qx1 qy1] [px2 py2] [qx2 qy2]]\n   (not (or (> px1 qx2) (> px2 qx1) (> py1 qy2) (> py2 qy1)))))\n\n(defn intersect-rect-circle?\n  ([{p :p sz :size} {s :p r :r}]\n   (intersect-rect-circle? p (m/+ p sz) s r))\n  ([[px py] [qx qy] [cx cy] r]\n   (let [ds (if (< cx px) (sq (- cx px)) (if (> cx qx) (sq (- cx qx)) 0.0))\n         ds (+ ds (if (< cy py) (sq (- cy py)) (if (> cy qy) (sq (- cy qy)) 0.0)))]\n     (<= ds (* r r)))))\n\n(defn intersect-aabb-aabb?\n  ([{pa :p sa :size} {pb :p sb :size}]\n   (intersect-aabb-aabb? pa pb (m/+ pa sa) (m/+ pb sb)))\n  ([pa pb qa qb]\n   (if (and (<= (pa 0) (qb 0)) (<= (pb 0) (qa 0)))\n     (if (and (<= (pa 1) (qb 1)) (<= (pb 1) (qa 1)))\n       (and (<= (pa 2) (qb 2)) (<= (pb 2) (qa 2)))))))\n\n;; Source: Graphics Gems 2 / SO:\n;; http://stackoverflow.com/questions/4578967\n\n(defn intersect-aabb-sphere?\n  ([{p :p sz :size} {s :p r :r}]\n   (intersect-aabb-sphere? p (m/+ p sz) s r))\n  ([[px py pz] [qx qy qz] [cx cy cz] r]\n   (let [ds (if (< cx px) (sq (- cx px)) (if (> cx qx) (sq (- cx qx)) 0.0))\n         ds (+ ds (if (< cy py) (sq (- cy py)) (if (> cy qy) (sq (- cy qy)) 0.0)))\n         ds (+ ds (if (< cz pz) (sq (- cz pz)) (if (> cz qz) (sq (- cz qz)) 0.0)))]\n     (<= ds (* r r)))))\n\n(comment\n  ;; example usage\n\n  (isec/intersect-aabb-frustum?\n   box-p box-size\n   (mat/frustum-planes view-mat proj-mat)))\n\n;; https://groups.google.com/forum/#!topic/comp.graphics.algorithms/M6lvyWC6PqU\n\n(defn intersect-aabb-frustum?\n  \"Takes 2 vectors defining an AABB (min-p & size) and a seq of plane\n  parameters (each element [normal w]). The plane normals must be\n  pointing *inwards*. Returns :inside, :intersect or :outside\"\n  [[px py pz :as p] size planes]\n  (let [[qx qy qz] (m/+ p size)]\n    (reduce\n     (fn [res [[nx ny nz] w]]\n       (let [vx (if (pos? nx) px qx)\n             vy (if (pos? ny) py qy)\n             vz (if (pos? nz) pz qz)]\n         (if (pos? (mm/madd nx vx ny vy nz vz w))\n           (reduced :outside)\n           (let [vx (if (pos? nx) qx px)\n                 vy (if (pos? ny) qy py)\n                 vz (if (pos? nz) qz pz)]\n             (if (pos? (mm/madd nx vx ny vy nz vz w))\n               :intersect\n               res)))))\n     :inside planes)))\n\n(defn intersect-sphere-sphere?\n  ([{p1 :p r1 :r} {p2 :p r2 :r}]\n   (intersect-sphere-sphere? p1 r1 p2 r2))\n  ([p1 r1 p2 r2]\n   (<= (g/dist-squared p1 p2) (mm/addm r1 r2 r1 r2))))\n\n(defn intersect-ray-sphere?\n  ([{rp :p dir :dir} {p :p r :r}]\n   (intersect-ray-sphere? rp dir p r))\n  ([rp dir p r]\n   (let [q (m/- p rp)\n         ds (m/mag-squared q)\n         v (- (m/dot q dir))\n         d (mm/msub r r (- ds (* v v)))]\n     (if (>= d 0.0)\n       (let [d (Math/sqrt d)\n             a (+ v d)\n             b (- v d)]\n         (if-not (and (< a 0) (< b 0))\n           (if (and (> a 0) (> b 0))\n             (if (> a b) [b a] [a b])\n             (if (> b 0) [b a] [a b]))\n           [a b]))))))\n\n;; Source: http://geomalgorithms.com/a06-_intersect-2.html\n\n(defn intersect-ray-triangle3?\n  [p d a b c]\n  (let [u (m/- b a)\n        v (m/- c a)\n        n (m/cross u v)]\n    (if (m/delta= V3 n)\n      {:type :degenerate}\n      (let [w0 (m/- p a)\n            a' (- (m/dot n w0))\n            b' (m/dot n d)]\n        (if (m/delta= 0.0 b')\n          (if (m/delta= 0.0 a')\n            {:type :same-plane}\n            {:type :no-intersect})\n          (let [r (/ a' b')]\n            (if (< r 0.0)\n              {:type :no-intersect}\n              (let [i (m/madd d r p)\n                    [u v w] (gu/triangle-barycentric-coords a b c i u v)]\n                (if (and (>= u 0.0) (>= w 0.0) (m/in-range? 0.0 1.0 v))\n                  {:type :intersect :p i}\n                  {:type :no-intersect :p i})))))))))\n\n;; Source:\n;; http://fileadmin.cs.lth.se/cs/Personal/Tomas_Akenine-Moller/code/tribox3.txt\n\n(defn- triaabb-axis-test\n  [pa1 pb1 pa2 pb2 a b fa fb sa sb]\n  (let [q (mm/madd a pa1 b pb1)\n        r (mm/madd a pa2 b pb2)\n        [min max] (if (< q r) [q r] [r q])\n        rad (mm/madd fa sa fb sb)]\n    (if (<= min rad) (>= max (- rad)))))\n\n(defn- triaabb-edge-test-e0\n  [[ax ay az :as a] [bx by bz :as b] [cx cy cz] [ex ey ez :as e] [sx sy sz]]\n  (let [[fx fy fz] (m/abs e)]\n    (if (triaabb-axis-test ay az cy cz ez (- ey) fz fy sy sz)\n      (if (triaabb-axis-test ax az cx cz (- ez) ex fz fx sx sz)\n        (triaabb-axis-test bx by cx cy ey (- ex) fy fx sx sy)))))\n\n(defn- triaabb-edge-test-e1\n  [[ax ay az] [bx by bz :as b] [cx cy cz :as c] [ex ey ez :as e] [sx sy sz]]\n  (let [[fx fy fz] (m/abs e)]\n    (if (triaabb-axis-test ay az cy cz ez ey fz fy sy sz)\n      (if (triaabb-axis-test ax az cx cz (- ez) ex fz fx sx sz)\n        (triaabb-axis-test ax ay bx by ey (- ex) fy fx sx sy)))))\n\n(defn- triaabb-edge-test-e2\n  [[ax ay az :as a] [bx by bz] [cx cy cz :as c] [ex ey ez :as e] [sx sy sz]]\n  (let [[fx fy fz] (m/abs e)]\n    (if (triaabb-axis-test ay az by bz ez (- ey) fz fy sy sz)\n      (if (triaabb-axis-test ax az bx bz (- ez) ex fz fx sx sz)\n        (triaabb-axis-test bx by cx cy ey (- ex) fy fx sx sy)))))\n\n(defn- triaabb-edge-minmax\n  [a b c s]\n  (if (< (min (min a b) c) s)\n    (>= (max (max a b) c) (- s))))\n\n(defn intersect-triangle3-aabb?\n  [a b c p s]\n  (let [[sx sy sz :as s] (m/* s 0.5)\n        p (m/+ p s)\n        [ax ay az :as a] (m/- a p)\n        [bx by bz :as b] (m/- b p)\n        [cx cy cz :as c] (m/- c p)\n        e0 (m/- b a)\n        e1 (m/- c b)]\n    (if (triaabb-edge-test-e0 a b c e0 s)\n      (if (triaabb-edge-test-e1 a b c e1 s)\n        (if (triaabb-edge-test-e2 a b c (m/- a c) s)\n          (if (triaabb-edge-minmax ax bx cx sx)\n            (if (triaabb-edge-minmax ay by cy sy)\n              (if (triaabb-edge-minmax az bz cz sz)\n                (intersect-plane-aabb? a (m/cross e0 e1) s)))))))))\n\n(defn intersect-line2-line2?\n  [[px1 py1 :as p] [qx1 qy1 :as q]\n   [px2 py2 :as lp] [qx2 qy2 :as lq]]\n  (let [dx1 (- qx1 px1), dy1 (- qy1 py1)\n        dx2 (- qx2 px2), dy2 (- qy2 py2)\n        dx12 (- px1 px2), dy12 (- py1 py2)\n        denom (mm/msub dy2 dx1 dx2 dy1)\n        na (mm/msub dx2 dy12 dy2 dx12)\n        nb (mm/msub dx1 dy12 dy1 dx12)]\n    (if (zero? denom)\n      (if (and (zero? na) (zero? nb))\n        (let [ip (gu/closest-point-on-segment lp p q)\n              iq (gu/closest-point-on-segment lq p q)]\n          (if (or (m/delta= ip lp) (m/delta= iq lq))\n            {:type :coincident :p ip :q iq}\n            {:type :coincident-no-intersect :p ip :q iq}))\n        {:type :parallel})\n      (let [ua (/ na denom)\n            ub (/ nb denom)\n            i (m/mix p q ua)]\n        (if (and (>= ua 0.0) (<= ua 1.0) (>= ub 0.0) (<= ub 1.0))\n          {:type :intersect :p i :ua ua :ub ub}\n          {:type :intersect-outside :p i :ua ua :ub ub})))))\n\n(defn intersect-line2-edges?\n  [rp rq edges]\n  (->> edges\n       (transduce\n        (comp\n         (map (fn [[p q]] (intersect-line2-line2? rp rq p q)))\n         (filter #(if (get % :p) (get #{:intersect :coincident} (get % :type)))))\n        (completing\n         (fn [closest isec]\n           (let [p (get isec :p)\n                 d (g/dist-squared rp p)]\n             (if (< d (closest 1)) [p d] closest))))\n        [nil m/INF+])\n       (first)))\n\n(defn intersect-ray2-edges?\n  [rp rd edges]\n  (intersect-line2-edges? rp (m/madd rd 1e29 rp) edges))\n\n(defn intersect-plane-plane?\n  [an aw bn bw]\n  (when-not (or (m/delta= aw bw *eps*) (m/delta= an bn *eps*))\n    (let [od (m/dot an bn)\n          det (/ (mm/madd od od -1))\n          u (* (mm/madd bw od aw) det)\n          v (* (mm/madd aw od bw) det)]\n      {:p (m/madd an u (m/* bn v)) :dir (gu/ortho-normal an bn)})))\n\n(defn intersect-ray-plane?\n  [rp dir n w]\n  (let [dp (m/dot n dir)\n        dn (+ (m/dot n rp) w)]\n    (if (m/delta= 0.0 dp *eps*)\n      {:type (if (zero? dn) :on-plane :parallel)}\n      (let [du (- (/ dn dp))\n            i (m/madd dir du rp)]\n        (if (m/in-range? 0.0 1.0 du)\n          {:type :intersect :p i}\n          {:type :intersect-outside :p i})))))\n\n;; Source:\n;; http://fileadmin.cs.lth.se/cs/Personal/Tomas_Akenine-Moller/code/tribox3.txt\n\n(defn intersect-plane-aabb?\n  \"Takes a point & normal defining a plane and 2 vectors defining an\n  AABB (min-p & size). Returns true if plane intersects box.\"\n  ([p n q s]\n   (let [s2 (m/* s 0.5)]\n     (intersect-plane-aabb? (m/- p (m/+ q s2)) n s2)))\n  ([[px py pz] [nx ny nz :as n] [sx sy sz]]\n   (let [[vx1 vx2] (if (pos? nx) [(- (- sx) px) (- sx px)] [(- sx px) (- (- sx) px)])\n         [vy1 vy2] (if (pos? ny) [(- (- sy) py) (- sy py)] [(- sy py) (- (- sy) py)])\n         [vz1 vz2] (if (pos? nz) [(- (- sz) pz) (- sz pz)] [(- sz pz) (- (- sz) pz)])]\n     (if (<= (mm/madd nx vx1 ny vy1 nz vz1) 0.0)\n       (>= (mm/madd nx vx2 ny vy2 nz vz2) 0.0)))))\n\n(defn intersect-plane-sphere?\n  [n w p r] (<= (m/abs* (+ (m/dot n p) w)) r))\n\n;; Tetrahedron intersection\n;; https://gist.github.com/postspectacular/9021724\n;; http://vcg.isti.cnr.it/Publications/2003/GPR03/fast_tetrahedron_tetrahedron_overlap_algorithm.pdf\n\n(defn- subdot\n  \"Computes sum((a-b)*c), where a, b, c are 3D vectors.\"\n  [a b c] (let [d (m/subm a b c)] (mm/add (d 0) (d 1) (d 2))))\n\n(defn- face-a\n  \"Takes a transformation fn and the 4 delta vectors between tetra1/tetra2.\n    Returns 2-elem vec of [bitmask affine-coords].\"\n  [f deltas]\n  (let [aff (mapv f deltas)]\n    [(mm/bitmask pos? (aff 0) (aff 1) (aff 2) (aff 3)) aff]))\n\n(defn- face-b1?\n  \"Takes the 4 delta vectors between tetra2/tetra1 and a normal.\n    Returns true if all dot products are positive.\"\n  [deltas n] (every? #(pos? (m/dot % n)) deltas))\n\n(defn- face-b2?\n  \"Like face-b1?, but optimized for last face of tetrahedron.\"\n  [verts refv n] (every? #(pos? (subdot % refv n)) verts))\n\n(defn- edge-a\n  \"Takes 2 bitmasks and edge flags, returns true if there's a\n    separating plane between the faces shared by that edge.\"\n  [ma mb ea eb]\n  (let [xa (bit-and ma (bit-xor ma mb))\n        xb (bit-and mb (bit-xor xa mb))\n        edge (fn [a b i j]\n               (let [cp (mm/msub (ea i) (eb j) (ea j) (eb i))]\n                 (or (and (pos? cp) (pos? (bit-or xa a)) (pos? (bit-or xb b)))\n                     (and (neg? cp) (pos? (bit-or xa b)) (pos? (bit-or xb a))))))]\n    (not\n     (or\n      (not= 15 (bit-or ma mb))\n      (edge 1 2 1 0)\n      (edge 1 4 2 0)\n      (edge 1 8 3 0)\n      (edge 2 4 2 1)\n      (edge 2 8 3 1)\n      (edge 4 8 3 2)))))\n\n(defn- get-edge\n  \"Lazy edge evaluation. Takes a vector of edges, vector of edge\n    points and an edge id. Looks up edge for given id and if not yet\n    present constructs it. Returns 2-elem vector of [edges edge].\"\n  [edges epoints id]\n  (let [e (edges id)]\n    (if e\n      [edges e]\n      (let [ep (epoints id), e (m/- (ep 0) (ep 1))]\n        [(assoc edges id e) e]))))\n\n(defn- check-faces-a\n  \"Takes the 4 delta vectors between the two tetras, edge definitions\n    of the 1st tetra, vertices of the 2nd, a reference point of the 1st\n    and a seq of specs, each encoding a specific check (either calls to\n    face-a* or edge-a). Returns vector of bitmasks or nil if fail early.\"\n  [deltas epoints verts p specs]\n  (loop [masks [], affine [], edges [nil nil nil nil nil], s specs]\n    (if s\n      (let [[f a b] (first s)]\n        (if (or (= :f f) (= :f* f))\n          (let [[edges ea] (get-edge edges epoints a)\n                [edges eb] (get-edge edges epoints b)\n                n (m/cross ea eb)\n                [m a] (if (= :f f)\n                        (face-a #(m/dot % n) deltas)\n                        (face-a #(subdot % p n) verts))]\n            (if (< m 15)\n              (recur (conj masks m) (conj affine a) edges (next s))))\n          (if-not (edge-a (masks a) (masks b) (affine a) (affine b))\n            (recur masks affine edges (next s)))))\n      masks)))\n\n(defn- check-faces-b\n  \"Much like check-faces-a, but for 2nd tetra and specs encoding calls to face-b1/2?.\n    Returns true if tetras do intersect.\"\n  [deltas epoints verts p specs]\n  (loop [edges [nil nil nil nil nil], s specs]\n    (if s\n      (let [[f a b] (first s)\n            [edges ea] (get-edge edges epoints a)\n            [edges eb] (get-edge edges epoints b)]\n        (if-not (if (= :f f)\n                  (face-b1? deltas (m/cross ea eb))\n                  (face-b2? verts p (m/cross ea eb)))\n          (recur edges (next s))))\n      true)))\n\n(defn intersect-tetrahedra?\n  \"Takes 2 seqs of 4 3D points, each defining a tetrahedron. Returns\n    true if they intersect. Orientation of points is irrelevant (unlike\n    in the original algorithm this implementation is based on).\"\n  [[pa pb pc pd :as p] [qa qb qc qd :as q]]\n  (let [masks (check-faces-a\n               (map #(m/- % pa) q)\n               [[pb pa] [pc pa] [pd pa] [pc pb] [pd pb]]\n               q pb [[:f 0 1] [:f 2 0] [:e 0 1] [:f 1 2]\n                     [:e 0 2] [:e 1 2] [:f* 4 3] [:e 0 3]\n                     [:e 1 3] [:e 2 3]])]\n    (if masks\n      (or (not= 15 (reduce bit-or masks))\n          (check-faces-b\n           (map #(m/- % qa) p)\n           [[qb qa] [qc qa] [qd qa] [qc qb] [qd qb]]\n           p qb [[:f 0 1] [:f 2 0] [:f 1 2] [:f* 4 3]])))))\n"]}